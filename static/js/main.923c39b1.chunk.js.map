{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PersonLink","props","human","to","slug","classNames","sex","name","PersonItem","onePerson","people","person","selectedSlug","mother","useMemo","find","one","motherName","father","fatherName","born","died","PeopleTable","map","PeoplePage","useParams","personSlug","useState","isLoading","setIsLoading","errMessage","setErrMessage","setPeople","useEffect","catch","finally","length","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.923c39b1.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  human: Person;\n};\n\nexport const PersonLink: React.FC<Props> = (props) => {\n  const { human } = props;\n\n  return (\n    <Link\n      to={`../${human.slug}`}\n      className={classNames({\n        'has-text-danger': human.sex === 'f',\n      })}\n    >\n      {human.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = (props) => {\n  const { people, person, selectedSlug } = props;\n\n  const isSelected = (onePerson: Person) => (\n    onePerson.slug === selectedSlug\n  );\n\n  person.mother = useMemo(() => people.find(one => (\n    person.motherName === one.name\n  )), [person, people]);\n\n  person.father = useMemo(() => people.find(one => (\n    person.fatherName === one.name\n  )), [person, people]);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected(person),\n      })}\n    >\n      <td>\n        <PersonLink human={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? <PersonLink human={person.mother} />\n          : (person.motherName || '-')}\n      </td>\n      <td>\n        {person.father\n          ? <PersonLink human={person.father} />\n          : (person.fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types/Person';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype Props = {\n  people: Person[];\n  selectedSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = (props) => {\n  const { people, selectedSlug } = props;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped\n      is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            people={people}\n            person={person}\n            selectedSlug={selectedSlug}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader/Loader';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const { personSlug = '' } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [errMessage, setErrMessage] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setErrMessage(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {errMessage && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {errMessage === false\n            && isLoading === false\n            && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoading && people.length < 1\n            ? <Loader />\n            : (\n              <PeopleTable\n                people={people}\n                selectedSlug={personSlug}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={(({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    ))}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/NavBar/Navbar';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"people\"\n            >\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n\n              <Route\n                path=\":personSlug\"\n                element={<PeoplePage />}\n              />\n\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}